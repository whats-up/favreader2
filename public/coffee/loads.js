// Generated by CoffeeScript 1.3.3
(function() {
  var TwController;

  TwController = (function() {

    function TwController() {
      if (!window.localStorage) {
        alert("このブラウザはLocalStorageに対応していないので当サイトを利用できません。最新のブラウザをお使いください。");
        retern;

      }
      if (!window.localStorage.getItem("jsondata")) {
        $.ajax({
          url: "/favever/api/timeline_json/",
          dataType: "json",
          timeout: 30000,
          success: function(data, datatype) {
            return window.localStorage.setItem("jsondata", JSON.stringify(data));
          },
          error: function(xml, msg, sss) {
            return alert(msg);
          }
        });
      }
    }

    TwController.prototype.JsonData = $.parseJSON(window.localStorage.getItem("jsondata"));

    TwController.prototype.showPage1 = function(data) {
      var cont;
      if (data == null) {
        data = this.JsonData;
      }
      cont = $("#contents");
      cont.empty();
      $('#tmpl_home_base').tmpl({}).appendTo(cont);
      $('#head_alert').hide();
      $.each(data, function() {
        var RT, elem, pict, txt;
        if (this.fields.status.retweet_count) {
          RT = "<span class='badge badge-warning'>" + this.fields.status.retweet_count + "RT</span>";
        } else {
          RT = "";
        }
        txt = this.fields.status.text.replace('\n', '<br>');
        pict = "";
        if (this.fields.status.Urls) {
          $.each(this.fields.status.Urls, function() {
            var host, href, l, link, seg1, seg2, seg3, seg4, seg5;
            link = $.url(this.expanded_url);
            host = link.attr('host');
            seg1 = link.segment(1);
            seg2 = link.segment(2);
            seg3 = link.segment(3);
            seg4 = link.segment(4);
            seg5 = link.segment(5);
            console.log(this.expanded_url);
            console.log("1:" + seg1);
            console.log("2:" + seg2);
            console.log("3:" + seg3);
            console.log("4:" + seg4);
            console.log("5:" + seg5);
            switch (host) {
              case 'twitpic.com':
                l = "http://twitpic.com/show/thumb/" + seg1;
                pict = "<img src='" + l + "' alt='pict' />";
                break;
              case 'instagr.am':
                l = this.expanded_url + "media/?size=t";
                pict = "<img src='" + l + "' alt='pict' />";
                break;
              case 'miil.me':
                l = this.expanded_url + ".jpeg?size=160";
                pict = "<img src='" + l + "' alt='pict' />";
                break;
              case 'miil.me':
                l = this.expanded_url + ".jpeg?size=160";
                pict = "<img src='" + l + "' alt='pict' />";
                break;
              default:
                console.log('');
            }
            href = "<a href='" + this.url + "' target='_blank'>" + this.display_url + "</a>";
            return txt = txt.replace(this.url, href);
          });
        }
        elem = "<li class='alert alert-fav status'>\n    <h3 class='thin'>\n        <span class='label label-success point'>" + this.fields.point + "</span>\n        <img src='" + this.fields.status.user.profile_image_url + "' width='36' height='36' alt=''>\n\n        <span class='tw-name'>" + this.fields.status.user.screen_name + "</span>\n\n        <a href='https://twitter.com/" + this.fields.status.user.screen_name + "/status/" + this.fields.status.id + "' target='_blank'>\n            <img src='/files/image/twitter_icons/bird_blue_16.png' alt='twitterで開く' title='twitterで開く'>\n        </a>\n    </h3>\n    <h6>" + this.fields.status.user.name + "</h6>\n    " + RT + "\n    <p>\n    " + txt + "\n    " + pict + "\n    </p>\n    <span class='tw-footer'>" + this.fields.status.created_at + "</span>\n\n    <div class='star-btn' id=star-btn-" + this.fields.status.id + ">\n        <div class='btn-group'>\n            <button class='btn btn-large star_btn_add'><i class='icon-plus'></i></button>\n            <button class='btn btn-large star_btn_omit'><i class='icon-minus'></i></button>\n\n        </div>\n    </div>\n\n</li>";
        return $('#status_ul').append(elem);
      });
      return setTimeout(function() {
        return $('.statuses li').wookmark({
          offset: 20,
          itemWidth: 300,
          autoResize: true
        }, 1);
      });
    };

    TwController.prototype.loadData1 = function() {
      return $.ajax({
        url: "/favever/api/get_fav_data/",
        dataType: "json",
        timeout: 30000,
        success: function(data, datatype) {
          if (data.add_count) {
            window.localStorage.setItem("jsondata", JSON.stringify(data.datas));
            $("#fav_get_msg").text("" + data.add_count + "件の新規Favを取得しました。");
            return $('#head_alert').fadeIn(300);
          }
        },
        error: function(xml, msg, sss) {
          return alert(msg);
        }
      });
    };

    TwController.prototype.getLinkJson = function() {
      var j, linkJson, _i, _len, _ref;
      linkJson = new Array();
      _ref = this.JsonData;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        j = _ref[_i];
        if (j.fields.status.Urls.length > 0) {
          linkJson.push(j);
        }
      }
      return linkJson;
    };

    return TwController;

  })();

  window.TwController = TwController;

}).call(this);
