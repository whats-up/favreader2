// Generated by CoffeeScript 1.3.3
var MongoStore, apis, app, express, http, path, routes, test_view, twitter_view, user, year;

year = new Date(Date.now() + 3600000 * 24 * 365);

express = require('express');

routes = require('./routes');

user = require('./routes/user');

test_view = require('./routes/test_view');

apis = require('./routes/apis');

twitter_view = require('./routes/twitter');

http = require('http');

path = require('path');

app = express();

MongoStore = require('connect-mongo')(express);

app.configure = function() {
  app.set('port', process.env.PORT || 3000);
  app.set('views', __dirname + '/views');
  app.set('view engine', 'jade');
  app.use(express.favicon());
  app.use(express.logger('dev'));
  app.use(express.bodyParser());
  app.use(express.methodOverride());
  app.use(express.cookieParser());
  app.use(express.session({
    secret: 'keyboard dog',
    store: new MongoStore({
      db: 'favreaderdb',
      host: '127.0.0.1',
      username: 'root',
      password: 'password'
    }),
    cookie: {
      httpOnly: false,
      expires: year,
      maxAge: year
    }
  }));
  app.use(app.router);
  app.use(require('stylus').middleware(__dirname + '/public'));
  return app.use(express["static"](path.join(__dirname, 'public')));
};

app.configure('development', function() {
  return app.use(express.errorHandler());
});

app.get('/', routes.index);

app.get('/users', user.list);

app.get('/test/3', test_view.Mongous_test);

app.get('/api/update_favorite', apis.update_favorite);

http.createServer(app).listen(app.get('port'), function() {
  console.log("Express server listening on port " + app.get('port'));
});

app.get('/auth/twitter', twitter_view.auth_twitter);

app.get('/auth/twitter/callback', twitter_view.auth_twitter_callback);

app.get('/test/1', function(req, res) {
  return oa.get('http://api.twitter.com/1/users/lookup.json', req.session.oauth.access_token, req.session.oauth.access_token_secret, {
    screen_name: '__whats'
  }, function(err, data) {
    if (err) {
      return console.log(err);
    } else {
      return res.send(data);
    }
  });
});

app.get('/test/2', function(req, res) {
  req.session.test = 'test11';
  return res.send(req.session);
});
